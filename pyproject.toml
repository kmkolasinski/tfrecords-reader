[build-system]
requires = ["setuptools>=74.1", "Cython"]
build-backend = "setuptools.build_meta"

[project]
name = "tfr_reader"
version = "0.1.0"
description = "TF"

authors = [
  {name = "Krzysztof Kolasinski"},
]

classifiers = [

]
license = {text = "TF"}
dependencies = [
]

[project.optional-dependencies]
dev = [
    "coverage",  # testing
    "mypy",  # linting
    "pytest~=7.2",
    "pytest-cov~=4.0",
    "pytest-sugar~=0.9",
    "pytest-watch~=4.2.0",
    "pytest-mock",
    "ruff"  # linting
]

[tool.setuptools]
packages = ["tfr_reader"]
package-dir = {"" = "src"}

ext-modules = [
  {name = "tfr_reader.cython.index", sources = ["src/tfr_reader/cython/index.pyx"]},
]


[tool.pytest.ini_options]
testpaths = [
    "tests",
]

addopts = [
    "-vv",
    "--durations=3",
]

[tool.ruff]
target-version = "py311"
line-length = 100
indent-width = 4
exclude = [
    ".tox",
    ".git",
    "venv"
]

# Apply fixes automatically
fix = true

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# By default, Ruff enables Flake8's F rules, along with a subset of the E rules,
# omitting any stylistic rules that overlap with the use of a formatter, like ruff format or Black.
# For more details see https://docs.astral.sh/ruff/rules/
[tool.ruff.lint]
exclude = ["*.ipynb"]
select = ["ALL"]

ignore = [

]

[tool.ruff.lint.per-file-ignores]
"*/tests/*" = [

]

# Only allow autofix for these import-related and docstring rules
fixable = ["F401", "F403", "I001", "D411", "D415", "D208", "D209"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
namespace_packages = false
mypy_path = "tfr_reader"
# to hide errors when we have multiple files with same name
explicit_package_bases = true
# to ignore type errors where we import third party module e.g. elasticsearch
# error: Cannot find implementation or library stub for module named "elasticsearch" or "pytest"
ignore_missing_imports = true
check_untyped_defs = true

strict = false
# see https://docs.pydantic.dev/latest/integrations/mypy/#configuring-the-plugin
plugins = "pydantic.mypy"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
